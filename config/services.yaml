# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.supported_locales: ['de', 'en']
    app.default_locale: 'de'
    app.site.name: "Hakhshara as a Place of Remembrance"
    app.site.matomo.id: "%env(string:SITE_MATOMO_ID)%"

    app.mpdf-converter.arguments:
        config:
            fontDir: [ "%kernel.project_dir%/public/css/fonts" ]
            fontdata:
                pdffont:
                    R: 'roboto-v30-latin-ext_latin-regular.ttf'
                    B: 'roboto-v30-latin-ext_latin-700.ttf'
                    I: 'roboto-v30-latin-ext_latin-italic.ttf'
                    BI: 'roboto-v30-latin-ext_latin-700italic.ttf'
            default_font: pdffont

    app.wordpress.url: 'https://juedische-geschichte-online.net/projekt/hachschara/'

    app.zotero.options:
        api-key: "%env(string:ZOTERO_API_KEY)%"
        group-id: 4432580
    app.zotero.collections:
        summaries: { key : U7ITQKWL, title : 'Summaries/Collected Volumes' }
        regional: { key : E2JNCKZH, title : 'Local and Regional Presentations'}
        youth_aliyah: { key : KBQT8I7D, title : 'Youth Aliyah' }
        postwar: { key : 59MF7CAV, title : 'Postwar' }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'
            $zoteroCollections: '%app.zotero.collections%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Menu\Builder:
        arguments: [ "@knp_menu.factory", "@translator.default", "@request_stack", "@router"  ]
        tags:
            # The alias is what is used to retrieve the menu
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main }

    App\Menu\Renderer:
        arguments:
            - '@knp_menu.matcher'
            - '%knp_menu.renderer.list.options%'
            - '%kernel.charset%'
            # add your own dependencies here
            - '@request_stack'
            - '@router'
            - '%jms_i18n_routing.locales%'
        tags:
            # The alias is what is used to retrieve the menu
            - { name: knp_menu.renderer, alias: custom }

    App\Utils\MpdfConverter:
        arguments: [ '%app.mpdf-converter.arguments%' ]

    # language-specific layout in 404
    App\EventListener\LanguageListener:
       arguments: [ '%jms_i18n_routing.default_locale%', '%jms_i18n_routing.locales%', '@jms_i18n_routing.locale_resolver' ]
       tags:
          - { name: kernel.event_listener, event: kernel.exception, method: setLocale }

    # Fetch bibliography from Zotero
    App\Service\ZoteroApiService:
        arguments:
            $options: "%app.zotero.options%"

    Vnn\WpApiClient\WpClient:
        arguments:
            - !service { class: Vnn\WpApiClient\Http\GuzzleAdapter, arguments: [ !service { class: 'GuzzleHttp\Client' } ] }
            - '%app.wordpress.url%'
